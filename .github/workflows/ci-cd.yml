name : Quiz API pipeline

on:
#  initiates the pipeline whenever user pushes on the main branch
  pull_request:
    branches:
      - main

# global variable
env:
  DOCKERHUB_USERNAME: darshangautam  
  DOCKERHUB_REPOSITORY: quiz_api  
  IMAGE_VERSION: v1.0.0

jobs:
  # Building the docker image and pushing to the docker registry.
  build_job:
    runs-on: ubuntu-latest # Test is running on ubuntu machine

    steps:
      - name: Clone and checkout to the repository
        uses: actions/checkout@v4 # Clones the repository in the working directory of the runner

      - name: Logging in to the docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Build Node app Image
        run: docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION -f Dockerfile  .

      - name: Push Docker Image to Docker Hub
        run: docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION

  # Deploying application after test is passed via github runner
  deploy_job:
    name: Deploy the Docker Image
    runs-on: [self-hosted, linux]  # self-hosted runner
    needs: [build_job]
    steps:
      # This action allows us to authenticate with DockerHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pull Main NodeApp Image from DockerHub
        run: docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION

      - name: Deploy Main App Image
        run: |
          docker rm -f $DOCKERHUB_REPOSITORY || true
          docker run -d -p ${PORT}:${PORT} \
            --name $DOCKERHUB_REPOSITORY \
            -e CLIENT_URL=${{ secrets.CLIENT_URL }} \
            -e PORT=${{ secrets.PORT }}  \
            -e GEMNI_API_KEY=${{ secrets.GEMNI_API_KEY }}  \
            $DOCKERHUB_USERNAME/$DOCKERHUB_REPOSITORY:$IMAGE_VERSION